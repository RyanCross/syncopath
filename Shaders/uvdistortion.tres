[gd_resource type="VisualShader" load_steps=9 format=3 uid="uid://c748gcjji8ses"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_cym72"]
input_name = "uv"

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_exki7"]
constant = 80.0

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_ov3cy"]
constant = 0.005

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_8cdyl"]
constant = 0.2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_q5yc0"]
input_name = "time"

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_ms35j"]
constant = Color(0, 1, 0.557237, 1)

[sub_resource type="GDScript" id="GDScript_crofe"]
script/source = "@tool
extends VisualShaderNodeCustom
class_name VisualShaderNodeRGBAscanLinesSharp

func _init():
	set_input_port_default_value(1, 21.0)
	set_input_port_default_value(2, 0.5)
	set_input_port_default_value(3, 1.0)
	set_input_port_default_value(4, 0.0)
	set_input_port_default_value(5, Vector3(1.0, 1.0, 1.0))
	set_input_port_default_value(6, 1.0)

func _get_name() -> String:
	return \"ScanLinesSharpShape\"

func _get_category() -> String:
	return \"RGBA\"

func _get_subcategory():
	return \"Shapes\"

func _get_description() -> String:
	return \"Sharp moving scanlines\"

func _get_return_icon_type():
	return VisualShaderNode.PORT_TYPE_VECTOR_3D

func _get_input_port_count() -> int:
	return 7

func _get_input_port_name(port: int):
	match port:
		0:
			return \"uv\"
		1:
			return \"amount\"
		2:
			return \"fill\"
		3:
			return \"speed\"
		4:
			return \"time\"
		5:
			return \"color\"
		6:
			return \"alpha\"

func _get_input_port_type(port: int):
	match port:
		0:
			return VisualShaderNode.PORT_TYPE_VECTOR_3D
		1:
			return VisualShaderNode.PORT_TYPE_SCALAR
		2:
			return VisualShaderNode.PORT_TYPE_SCALAR
		3:
			return VisualShaderNode.PORT_TYPE_SCALAR
		4:
			return VisualShaderNode.PORT_TYPE_SCALAR
		5:
			return VisualShaderNode.PORT_TYPE_VECTOR_3D
		6:
			return VisualShaderNode.PORT_TYPE_SCALAR

func _get_output_port_count() -> int:
	return 2

func _get_output_port_name(port: int):
	match port:
		0:
			return \"col\"
		1:
			return \"alpha\"

func _get_output_port_type(port: int):
	match port:
		0:
			return VisualShaderNode.PORT_TYPE_VECTOR_3D
		1:
			return VisualShaderNode.PORT_TYPE_SCALAR

func _get_global_code(mode):
	var path = self.get_script().get_path().get_base_dir()
	return '#include \"' + path + '/scanLinesSharp.gdshaderinc\"'

func _get_code(input_vars, output_vars, mode, type):
	var uv = \"UV\"
	
	if input_vars[0]:
		uv = input_vars[0]
	
	return \"\"\"%s = %s;
%s = _scanLinesSharpFunc(%s.xy, %s, %s, %s, %s) * float(%s);\"\"\" % [
output_vars[0], input_vars[5],
output_vars[1], uv, input_vars[1], input_vars[2], input_vars[3], input_vars[4], input_vars[6]]
"

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_lxltx"]
default_input_values = [1, 21, 2, 0.5, 3, 1, 4, 0, 5, Vector3(1, 1, 1), 6, 1.0]
initialized = true
script = SubResource("GDScript_crofe")

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;



"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(1400, 460)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_cym72")
nodes/fragment/2/position = Vector2(202.697, 324.291)
nodes/fragment/3/node = SubResource("VisualShaderNodeFloatConstant_exki7")
nodes/fragment/3/position = Vector2(342.697, 404.291)
nodes/fragment/4/node = SubResource("VisualShaderNodeFloatConstant_ov3cy")
nodes/fragment/4/position = Vector2(342.697, 484.291)
nodes/fragment/5/node = SubResource("VisualShaderNodeFloatConstant_8cdyl")
nodes/fragment/5/position = Vector2(342.697, 564.291)
nodes/fragment/6/node = SubResource("VisualShaderNodeInput_q5yc0")
nodes/fragment/6/position = Vector2(222.697, 644.291)
nodes/fragment/7/node = SubResource("VisualShaderNodeColorConstant_ms35j")
nodes/fragment/7/position = Vector2(342.697, 724.291)
nodes/fragment/8/node = SubResource("VisualShaderNodeCustom_lxltx")
nodes/fragment/8/position = Vector2(622.698, 544.291)
